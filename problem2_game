//SPDX-License-Identifier: MIT

pragma solidity 0.8.15;

contract Problem2Game {
    string success = "Congratulations, you won!";
    string failure = "Thank you for playing!";
    uint public random;
    /* Function that generates random number from 0 to 2**256-1
    */
    function getRandom() internal returns(uint) {
        random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, random))) % (10);
        return uint(random);
    }
    /* Function that checks if the given number is +- 5 distance from random and vice versa.
    */
    function insertNumber(uint _number) public returns(string memory) {
        random = getRandom();
        if(_number < random) {
            if((random - _number) <= uint(5) || (random + uint(5)) <= _number) {
                return success;
            } else {
                return failure;
            } 
        } else {
            if((_number - random) <= uint(5) || (random + uint(5)) <= _number) {
                 return success;
            } else {
                 return failure;
            }
        }
        /*or using safe math
         unchecked {if((random - _number) <= uint(5) || (random + uint(5)) <= _number) {
                return success;
            } else {
                return failure;
            } }
        */
    }
}
