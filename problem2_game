//SPDX-License-Identifier: MIT

pragma solidity 0.8.15;

contract Game {
    string success = "Congratulations, you won!";
    string failure = "Thank you for playing!";
    uint public random;

    function getRandom(uint _random) internal returns(uint) {
        random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, random))) % _random;
        return uint(random);
    }

    function insertNumber(uint _number) public returns(string memory) {
        random = getRandom(2**256 - 1);
        if(_number < random) {
            if((random - _number) == uint(5) || (random + uint(5)) == _number) {
                return success;
            } else {
                return failure;
            }
        } else {
            if((_number - random) == uint(5) || (random + uint(5)) == _number) {
                return success;
            } else {
                return failure;
            }
        }
    }
}
